name: Build RustDeskIddDriver Win10
on:
  workflow_dispatch:
  workflow_call:
#  push:
#    branches:
#      - main

env:
  TAG_NAME: RustDeskIddDriver

jobs:
  build_Win10:
    strategy:
      matrix:
        # configuration: [Debug, Release]
        configuration: [Release]
        platform: [x64]
        target: [Windows10]

    runs-on: windows-2022

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
   
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1
        
      - name: Set Solution name
        shell: bash
        run: |
          echo "Solution_Path=${{ env.TAG_NAME }}.sln" >> $GITHUB_ENV

      - name: Build solution
        run: |
          msbuild ${{ env.Solution_Path }} /property:Configuration=${{ env.Configuration }} /property:Platform=${{ env.Platform }} /property:TargetVersion=${{ env.Target }}
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Target: ${{ matrix.target }}

      - name: Create Zip Archive Release
        uses: deep-soft/zip-release@v2
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Target: ${{ matrix.target }}
        with:
          type: 'zip'
          filename: '${{ env.TAG_NAME }}-${{ env.Configuration }}-${{ env.Platform }}-${{ env.Target }}.zip'
          directory: 'x64/Release'
          inclusions: '*.cat *.cer *.inf *.dll *.exe *.bat'
          exclusions: '*.map *.pdb ./.git/* .git/*'
          recursive_exclusions: '*.map *.pdb'
          path: '${{ env.TAG_NAME }}.cer ${{ env.TAG_NAME }}.inf ${{ env.TAG_NAME }}.dll'

      - name: MD5 for Zip Archive
        uses: deep-soft/sha-checksums@v1
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Target: ${{ matrix.target }}
        with:
          type: 'md5'
          filename: '${{ env.TAG_NAME }}-${{ env.Configuration }}-${{ env.Platform }}-${{ env.Target }}.zip.md5'
          directory: 'x64/Release'
          path: '${{ env.TAG_NAME }}-${{ env.Configuration }}-${{ env.Platform }}-${{ env.Target }}.zip'
          ignore_git: true
          # output env.SHA_SUMS

      - name: Upload zip
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ${{ env.TAG_NAME }}
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          # tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
            ${{ env.SHA_SUMS }}

      - name: Create Zip Archive Release - ALL
        continue-on-error: true
        uses: deep-soft/zip-release@v2
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Target: ${{ matrix.target }}
        with:
          type: 'zip'
          filename: '${{ env.TAG_NAME }}-${{ env.Configuration }}-${{ env.Platform }}-${{ env.Target }}-ALL.zip'
          directory: 'x64/Release'
          inclusions: '*'
          exclusions: '*.map *.pdb ./.git/* .git/*'
          recursive_exclusions: '*.map *.pdb'
          path: '${{ env.TAG_NAME }}.cer ${{ env.TAG_NAME }}.inf ${{ env.TAG_NAME }}.dll'

      - name: Upload zip
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ${{ env.TAG_NAME }}
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          # tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
