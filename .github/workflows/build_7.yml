name: Build RustDeskIddDriver Win7
on:
  workflow_dispatch:
  workflow_call:
#  push:
#    branches:
#      - main

env:
  TAG_NAME: RustDeskIddDriver7

jobs:
  build_Win7:
    strategy:
      matrix:
        # configuration: [Debug, Release]
        configuration: [Release]
        platform: [x64]
        target: [Windows7]

    runs-on: windows-2022

    env:
      Solution_Path: .\${{ env.TAG_NAME }}.sln

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install MSVC 2015 (v140) and Windows 8.1 SDK
        shell: powershell
        run: |
          $VS_BTOOLS_EXE="vs_buildtools.exe"
          $VS_BTOOLS_URI="https://aka.ms/vs/15/release/vs_buildtools.exe"
          Invoke-WebRequest -Uri $VS_BTOOLS_URI -OutFile $VS_BTOOLS_EXE
          Start-Process -FilePath ./vs_BuildTools.exe -ArgumentList `
          "--add", "Microsoft.VisualStudio.Component.VC.140", `
          "--add", "Microsoft.VisualStudio.Component.Windows81SDK", `
          "--quiet", "--norestart", "--force", "--wait" -Wait -PassThru

      - name: Build solution
        run: |
          # msbuild ${{ env.Solution_Path }} /property:Configuration=${{ env.Configuration }} /property:Platform=${{ env.Platform }} /property:TargetVersion=Windows7
          msbuild ${{ env.Solution_Path }} /property:Configuration=${{ env.Configuration }} /property:Platform=${{ env.Platform }} /property:TargetVersion=${{ env.Target }}
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Target: ${{ matrix.target }}

      - name: Create Zip Archive Release
        uses: deep-soft/zip-release@v2
        env:
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          Target: ${{ matrix.target }}
        with:
          type: 'zip'
          filename: '${{ env.TAG_NAME }}-${{ env.Configuration }}-${{ env.Platform }}-${{ env.Target }}.zip'
          directory: 'x64/Release'
          inclusions: '*.cer *.inf *.dll'
          exclusions: '*.map *.pdb ./.git/* .git/*'
          recursive_exclusions: '*.map *.pdb'
          path: '${{ env.TAG_NAME }}.cer ${{ env.TAG_NAME }}.inf ${{ env.TAG_NAME }}.dll'

      - name: Upload zip
        continue-on-error: true
        uses: deep-soft/upload-artifact@main
        with:
          name: ${{ env.TAG_NAME }}
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        continue-on-error: true
        uses: deep-soft/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          # tag_name: ${{ env.TAG_NAME }}-${{ env.VERSION }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
